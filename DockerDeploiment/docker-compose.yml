version: '3.7'

services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    entrypoint: ./entrypoint.sh
    ports:
      - 3500:3000
      - 8888:80
    volumes:
      - ./frontend-data:/etc/frontend-data
    hostname: frontend

  graphql:
    build:
      context: ./GraphQL
      dockerfile: Dockerfile
    container_name: graphql-microservice
    restart: always
    entrypoint: ./entrypoint.sh
    environment:
      USER_MICROSERVICE_ADDR: http://user-microservice:8000
      BUY_MICROSERVICE_ADDR: http://buy-microservice:8000
      PRODUCT_MICROSERVICE_ADDR: http://product-microservice:7000
      MONGODB_URI: mongodb://gonzalo:12345@mongodb:27017/gonzaloShop
      TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IjYzMjYxNjFmZTZlZTgwYmM5ZjNjNDlkOSIsImlhdCI6MTY2MzUxOTg3Nn0.QIyMubnQuAkCeseIbvq2S1n06Pr1gFtQbsfh7ZaGEk0
    expose: 
        - "4000"
    ports:
      - 4500:4000
    volumes:
      - ./graphql-data:/etc/microservice-data
    hostname: graphql-microservice


  product-microservice:
    build:
      context: ./JavaScript
      dockerfile: Dockerfile
    container_name: product-microservice
    restart: always
    entrypoint: ./entrypoint.sh
    environment:
      PORT: 7000
      MYSQL_ADDR: mysql
      MYSQL_PORT: 3306
      MONGODB_URI: mongodb://gonzalo:12345@mongodb:27017/gonzaloShop
      TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IjYzMjYxNjFmZTZlZTgwYmM5ZjNjNDlkOSIsImlhdCI6MTY2MzUxOTg3Nn0.QIyMubnQuAkCeseIbvq2S1n06Pr1gFtQbsfh7ZaGEk0
    expose: 
        - "7000"
    ports:
      - 7500:7000
    volumes:
      - ./javascript-data:/etc/microservice-data
    hostname: product-microservice

  user-microservice:
    build:
      context: ./Python
      dockerfile: Dockerfile
    container_name: user-microservice
    restart: always
    entrypoint: /entrypoint.sh
    environment:
      PORT: 7000
      MYSQL_ADDR: mysql
      MYSQL_PORT: 3306
      MONGODB_URI: mongodb://gonzalo:12345@mongodb:27017/gonzaloShop
      TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvb3QiLCJpZCI6IjYzMjYxNjFmZTZlZTgwYmM5ZjNjNDlkOSIsImlhdCI6MTY2MzUxOTg3Nn0.QIyMubnQuAkCeseIbvq2S1n06Pr1gFtQbsfh7ZaGEk0
    expose: 
        - "8000"
    ports:
      - 3530:8000
    volumes:
      - ./python-data:/etc/microservice-data
    hostname: user-microservice

  buy-microservice:
    build:
      context: ./PHP
      dockerfile: Dockerfile
    container_name: buy-microservice
    restart: always
    entrypoint: /entrypoint.sh
    expose: 
        - "8000"
    ports:
      - 8550:8000
    volumes:
      - ./php-data:/etc/microservice-data
    hostname: buy-microservice


  mongodb:
    build:
      context: ./MongoDB
      dockerfile: Dockerfile
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_USERNAME: gonzalo
      MONGO_INITDB_PASSWORD: 12345
      MONGO_INITDB_DATABASE: gonzaloShop
    ports:
      - 12500:27017
    volumes:
      - ./mongo:/etc/mongo
    hostname: mongodb


  mysql:
    build:
      context: ./MySQL
      dockerfile: Dockerfile
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: db_gonzaloshop
      MYSQL_USER: userdb
      MYSQL_PASSWORD: "12345"
    ports:
      - 23306:3306
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./schemas:/var/lib/mysql
    hostname: mysql


networks:
    netmicroservice:
      external: true

volumes:
  graphql: {}
  mongo: {}
  schemas: {}
  frontend: {}
  product-microservice: {}
  user-microservice: {}
  buy-microservice: {}